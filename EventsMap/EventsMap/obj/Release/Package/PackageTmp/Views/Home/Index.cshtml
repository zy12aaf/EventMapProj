@using System.Web.Script.Serialization
@model IEnumerable<Domain.Models.Location>
@{
    ViewBag.Title = "Index";
    AjaxOptions ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "sap",
        OnSuccess = "OnSuccess"
    };
}

<div id="map">
    <div id="mapDiv">

    </div>
</div>

<input id="addressField" type="text" size="30" placeholder="Enter your Address" />
<input type="button" id="listAdressBtn" value="Pin Address On Map" />

@using (Ajax.BeginForm("GetResultsBasedOnSearch", ajaxOptions)) {
    @Html.TextBox("keyword")
    <input class="btn btn-success" type="submit" value="Search for event" />
}


<div id="sap"></div>
<!-- Include Google Maps JS API -->
<script type="text/javascript"
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB6BjIj006g_TZySISI5YDajyTR23S5b8g">
</script>

<script src="~/Scripts/MapScripts.js"></script>



<script>
    mapEvent = new MapEvent();

    google.maps.event.addDomListener(window, 'load', function () { mapEvent.createMarkers('@ViewBag.Json'), false });
    
    
    @*function OnSuccess() {
        mapEvent.initNewMap();
        mapEvent.createMarkers('@ViewBag.Json', true);
    }*@
    

</script>





































































@*<script>
        function initMap() {
            var map;
            var geocoder;

            geocoder = new google.maps.Geocoder();

            var latLangIstanbul = new google.maps.LatLng(39.9078, 32.8252);

            var mapOptions = {
                center: latLangIstanbul,
                zoom: 10,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var mapElement = document.getElementById('mapDiv');

            map = new google.maps.Map(mapElement, mapOptions);

            function createMarkers() {
                @foreach (var loc in @Model) {
                    <text>
                        var marker = new google.maps.Marker({
                            position: { lat: @loc.Latitude, lng: @loc.Longtitude },
                            map: map,
                            title: '@loc.EventName'
                        });
                    </text>
                }
            }
            return createMarkers;
        }

        var markerCreator = initMap();
        google.maps.event.addDomListener(window, 'load', markerCreator);



        document.onload = startButtonEvents();

        //------------------------------------------------------------------------------------------------
        function listAddresses() {
            //get text input handler
            var addressField = document.getElementById('addressField');

            //call the geocoding function
            geocodeAddress(addressField.value);
        }

        function geocodeAddress(addressText) {
            //real essence, send the geocoding request
            geocoder.geocode({ 'address': addressText }, function (results, status) {
                //if the service is working properly...
                if (status == google.maps.GeocoderStatus.OK) {
                    //show the first result on map
                    pinpointResult(results[0]);
                } else {
                    alert('Cannot geocode because: ' + status);
                }
            });
        }

        function pinpointResult(result) {
            map.setCenter(result.geometry.location);
            map.setZoom(16);
        }



        //function zoomToIstanbul() {
        //    var istanbul = new google.maps.LatLng(41.0579, 29.0340);
        //    map.setCenter(istanbul);
        //}

        //function zoomToStreet() {
        //    map.setZoom(18);
        //}

        //function disableDrag() {
        //    map.setOptions({ draggable: false });
        //}

        //function setMaxZoom() {
        //    map.setOptions({ maxZoom: 12 });
        //}

        //function setMinZoom() {
        //    map.setOptions({ minZoom: 5 });
        //}

        //function changeUI() {
        //    map.setOptions({ disableDefaultUI: true });
        //}

        //function disableScroll() {
        //    map.setOptions({ scrollwheel: false });
        //}

        function startButtonEvents() {
            var listAddressBtn = document.getElementById('listAdressBtn');
            listAddressBtn.addEventListener('click', function () {
                listAddresses();
            });
        }

    </script>*@